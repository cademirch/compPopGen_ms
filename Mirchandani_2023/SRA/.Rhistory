mutate(Population = case_when(
Organism=="Ficedula_albicollis" ~ "OC",
Organism=="Ficedula_hypoleuca" ~ "SP"
)) %>%
left_join(pop_meta, by = c("Population" = "Population"))
sp<-"Ficedula_albicollis"
##Bioproject 1##
bp<-"PRJEB7359"
sra1<-get_sra(bp, opt_cols=c("geo_loc_name_country", "geo_loc_name_country_continent", "Title", "Description")) %>%
rename(Submitter_Id = Title, Country = geo_loc_name_country, Continent = geo_loc_name_country_continent) %>%
separate(Submitter_Id, into=c("Population", "Sample"), remove=FALSE, extra="merge", fill = "right")
#ugly clean up because some things are missing information
#source of NRM996601 https://www.gbif.org/occurrence/2248760844
#source of pop key is Fig1 at https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4617962/ as it doesn't seem to be provided as text anywhere
sra1 <- sra1 %>%
mutate(Country = case_when(
Population == "I" ~ "Italy",
Population == "OC" ~ "Sweden",
Population == "NRM996601" ~ "Sweden",
Population == "SP" ~ "Sweden",
Population == "FHYP" ~ "Unknown",
TRUE ~ Country
)) %>%
mutate(Continent = case_when(
Country == "Italy" ~ "Europe",
Country == "Sweden" ~ "Europe",
Country == "Unknown" ~ "Unknown",
TRUE ~ Continent
)) %>%
mutate(Locality = case_when(
Population == "SP" ~ "Uppsala",
Population == "OC" ~ "Öland",
Population == "OP" ~ "Öland",
TRUE ~ "Unknown"
))
#last cleanup of NRM996601 and removing description field
sra1 <- sra1 %>%
mutate(Population = ifelse(Population == "NRM996601", "FPAR", Population)) %>%
mutate(Sample = ifelse(is.na(Sample), Submitter_Id, Sample)) %>%
select(-Description)
#for reference later
pop_meta <- sra1 %>% select(Country, Continent, Population, Locality, Organism) %>% distinct()
##Bioproject 2##
bp<-"PRJEB12616"
#keeping only parents based on pedigree in Fig 1 here: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4878770/
sra2<-get_sra(bp, opt_cols=c("Alias")) %>%
rename(Submitter_Id = Alias) %>%
mutate(Sample = str_remove(Submitter_Id, "[0-9]*$")) %>%
mutate(Country = "Sweden", Continent = "Europe", Locality = "Öland") %>%
filter(Sample == "CJ" | Sample == "BL" | Sample == "BY") %>%
mutate(Population = "OC")
##Bioproject 3##
bp<-"PRJEB11502"
#keeping only parents based on pedigree in Fig 1 here: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4878770/
sra3<-get_sra(bp, opt_cols=c("Alias")) %>%
rename(Submitter_Id = Alias) %>%
mutate(Country = "Sweden", Continent = "Europe", Locality = "Öland", Population = "OC")
#some extraneous stuff in the BioProject for some reason, so filter to keep only samples from paper to be sure the metadata is correct
samples<-read_delim("https://datadryad.org/stash/downloads/file_stream/332334", delim=" ")
sra3 <- filter(sra3, Submitter_Id %in% samples$id) %>% mutate(sex = "male")
## Biorproject 4 ##
bp<-"PRJEB2984"
sra4<-get_sra(bp, opt_cols=c("LibrarySource", "Title")) %>%
filter(LibrarySource == "GENOMIC") %>%
rename(Submitter_Id = Title) %>% select(-LibrarySource) %>% distinct() %>%
mutate(Population = case_when(
Organism=="Ficedula_albicollis" ~ "OC",
Organism=="Ficedula_hypoleuca" ~ "SP"
)) %>%
left_join(pop_meta, by = c("Population" = "Population"))
temp<-read_sra_full("SraRunTable.txt", "~/Downloads")
#this is a simple script to take a BioProject downloaded from RunSelector, and make it compatible with the clean metadata pipeline.
#ideally this should be refactored into functions shared with the SRA_parser.R script
library(tidyverse)
library(purrr)
library(stringr)
not_all_na <- function(x) {!all(is.na(x))}
read_sra_full <- function(file, path) {
df<-read_csv(paste0(path, "/", file), cols(.default="c"), col_names = TRUE)
}
not_all_na <- function(x) {!all(is.na(x))}
write_sample_metadata <- function(df) {
df %>%
mutate(Organism = str_replace_all(Organism, " ", "_")) %>% distinct() %>%
mutate(sex = case_when(
is.na(sex) ~ "missing",
sex == "male and female" | sex == "mixed" | sex == "pooled male and female" ~ "pooled",
tolower(sex) == "na" | tolower(sex) == "not applicable"  ~ "missing",
tolower(sex) == "not collected" | tolower(sex) == "not determined" ~ "unknown",
TRUE ~ sex
)) %>%
mutate(`Library Name` = case_when(
is.na(`Library Name`) ~ str_c("library_", `Sample Name`),
TRUE ~ `Library Name`
)) %>%
split(., .$BioProject) %>%
imap(~ write_tsv(select_if(as.data.frame(.x), not_all_na), file = str_c(path_to_write, '/SRA-sample-metadata/SRA_Metadata_', .y, '.tsv')))
}
temp<-read_sra_full("SraRunTable.txt", "~/Downloads")
write_sample_metadata(temp, "~/Projects/popgen/compPopGen_ms/SRA")
#this is a simple script to take a BioProject downloaded from RunSelector, and make it compatible with the clean metadata pipeline.
#ideally this should be refactored into functions shared with the SRA_parser.R script
library(tidyverse)
library(purrr)
library(stringr)
not_all_na <- function(x) {!all(is.na(x))}
read_sra_full <- function(file, path) {
df<-read_csv(paste0(path, "/", file), cols(.default="c"), col_names = TRUE)
}
not_all_na <- function(x) {!all(is.na(x))}
write_sample_metadata <- function(df, path_to_write) {
df %>%
mutate(Organism = str_replace_all(Organism, " ", "_")) %>% distinct() %>%
mutate(sex = case_when(
is.na(sex) ~ "missing",
sex == "male and female" | sex == "mixed" | sex == "pooled male and female" ~ "pooled",
tolower(sex) == "na" | tolower(sex) == "not applicable"  ~ "missing",
tolower(sex) == "not collected" | tolower(sex) == "not determined" ~ "unknown",
TRUE ~ sex
)) %>%
mutate(`Library Name` = case_when(
is.na(`Library Name`) ~ str_c("library_", `Sample Name`),
TRUE ~ `Library Name`
)) %>%
split(., .$BioProject) %>%
imap(~ write_tsv(select_if(as.data.frame(.x), not_all_na), file = str_c(path_to_write, '/SRA-sample-metadata/SRA_Metadata_', .y, '.tsv')))
}
temp<-read_sra_full("SraRunTable.txt", "~/Downloads")
write_sample_metadata(temp, "~/Projects/popgen/compPopGen_ms/SRA")
sp<-"Ficedula_albicollis"
##Bioproject 1##
bp<-"PRJEB7359"
sra1<-get_sra(bp, opt_cols=c("geo_loc_name_country", "geo_loc_name_country_continent", "Title", "Description")) %>%
rename(Submitter_Id = Title, Country = geo_loc_name_country, Continent = geo_loc_name_country_continent) %>%
separate(Submitter_Id, into=c("Population", "Sample"), remove=FALSE, extra="merge", fill = "right")
#ugly clean up because some things are missing information
#source of NRM996601 https://www.gbif.org/occurrence/2248760844
#source of pop key is Fig1 at https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4617962/ as it doesn't seem to be provided as text anywhere
sra1 <- sra1 %>%
mutate(Country = case_when(
Population == "I" ~ "Italy",
Population == "OC" ~ "Sweden",
Population == "NRM996601" ~ "Sweden",
Population == "SP" ~ "Sweden",
Population == "FHYP" ~ "Unknown",
TRUE ~ Country
)) %>%
mutate(Continent = case_when(
Country == "Italy" ~ "Europe",
Country == "Sweden" ~ "Europe",
Country == "Unknown" ~ "Unknown",
TRUE ~ Continent
)) %>%
mutate(Locality = case_when(
Population == "SP" ~ "Uppsala",
Population == "OC" ~ "Öland",
Population == "OP" ~ "Öland",
TRUE ~ "Unknown"
))
#last cleanup of NRM996601 and removing description field
sra1 <- sra1 %>%
mutate(Population = ifelse(Population == "NRM996601", "FPAR", Population)) %>%
mutate(Sample = ifelse(is.na(Sample), Submitter_Id, Sample)) %>%
select(-Description)
#for reference later
pop_meta <- sra1 %>% select(Country, Continent, Population, Locality, Organism) %>% distinct()
##Bioproject 2##
bp<-"PRJEB12616"
#keeping only parents based on pedigree in Fig 1 here: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4878770/
sra2<-get_sra(bp, opt_cols=c("Alias")) %>%
rename(Submitter_Id = Alias) %>%
mutate(Sample = str_remove(Submitter_Id, "[0-9]*$")) %>%
mutate(Country = "Sweden", Continent = "Europe", Locality = "Öland") %>%
filter(Sample == "CJ" | Sample == "BL" | Sample == "BY") %>%
mutate(Population = "OC")
##Bioproject 3##
bp<-"PRJEB11502"
#keeping only parents based on pedigree in Fig 1 here: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4878770/
sra3<-get_sra(bp, opt_cols=c("Alias")) %>%
rename(Submitter_Id = Alias) %>%
mutate(Country = "Sweden", Continent = "Europe", Locality = "Öland", Population = "OC")
#some extraneous stuff in the BioProject for some reason, so filter to keep only samples from paper to be sure the metadata is correct
samples<-read_delim("https://datadryad.org/stash/downloads/file_stream/332334", delim=" ")
sra3 <- filter(sra3, Submitter_Id %in% samples$id) %>% mutate(sex = "male")
## Biorproject 4 ##
bp<-"PRJEB2984"
sra4<-get_sra(bp, opt_cols=c("LibrarySource", "Title")) %>%
filter(LibrarySource == "GENOMIC") %>%
rename(Submitter_Id = Title) %>% select(-LibrarySource) %>% distinct() %>%
mutate(Population = case_when(
Organism=="Ficedula_albicollis" ~ "OC",
Organism=="Ficedula_hypoleuca" ~ "SP"
)) %>%
left_join(pop_meta, by = c("Population" = "Population"))
meta <- bind_rows(sra1, sra2, sra3, sra4)
write_metadata(meta, sp)
bp<-"PRJNA323589"
sp<-"Fundulus_heteroclitus"
sra<-get_sra(bp, opt_cols=c("Sample Name", "Ecotype", "lat_lon", "Collection_date")) %>%
rename(Submitter_Id = `Sample Name`) %>%
mutate(Phenotype = case_when(
Ecotype == "New Bedford Harbor" | Ecotype == "Bridgeport" | Ecotype == "Newark" | Ecotype == "Elizabeth River" ~ "Tolerant",
Ecotype == "Block Island" | Ecotype == "Flax Pond" | Ecotype == "Sandy Hook" | Ecotype == "Kings Creek" ~ "Sensitive",
TRUE ~ NA_character_
)) %>%
rename(Population = Ecotype)
write_metadata(sra, sp)
bp1<-"PRJNA485198"
sp<-"Haplochromis_burtoni"
sra<-get_sra(bp1, opt_cols=c("Ecotype", "Collection_date", "Sample Name")) %>%
rename(Submitter_Id = `Sample Name`)
sra
sra<-get_sra(bp1, opt_cols=c("Ecotype", "Collection_date", "Sample Name")) %>%
rename(Submitter_Id = `Sample Name`, Population = Ecotype)
bp1<-"PRJNA485198"
sp<-"Haplochromis_burtoni"
sra<-get_sra(bp1, opt_cols=c("Ecotype", "Collection_date", "Sample Name")) %>%
rename(Submitter_Id = `Sample Name`, Population = Ecotype)
write_metadata(sra, sp)
sp<-"Hippocampus_comes"
bp<-"PRJNA612146"
sra<-get_sra(bp, opt_cols = c("Sample Name", "Ecotype")) %>%
rename(Submitter_Id = `Sample Name`) %>%
separate(Ecotype, into=c("Location", "Country"), extra="merge")
sra
sp<-"Hippocampus_comes"
bp<-"PRJNA612146"
sra<-get_sra(bp, opt_cols = c("Sample Name", "Ecotype")) %>%
rename(Submitter_Id = `Sample Name`) %>%
separate(Ecotype, into=c("Location", "Country"), extra="merge", sep=",")
sra
table(sra$Location)
table(sra$County)
table(sra$Countty)
table(sra$Country)
sp<-"Hippocampus_comes"
bp<-"PRJNA612146"
sra<-get_sra(bp, opt_cols = c("Sample Name", "Ecotype")) %>%
rename(Submitter_Id = `Sample Name`) %>%
separate(Ecotype, into=c("Location", "Country"), extra="merge", sep=",") %>%
mutate(Location = str_remove_all(Location, "\\"))
?str_remove_all
sp<-"Hippocampus_comes"
bp<-"PRJNA612146"
sra<-get_sra(bp, opt_cols = c("Sample Name", "Ecotype")) %>%
rename(Submitter_Id = `Sample Name`) %>%
separate(Ecotype, into=c("Location", "Country"), extra="merge", sep=",") %>%
mutate(Location = str_remove_all(Location, fixed(\))
sp<-"Hippocampus_comes"
bp<-"PRJNA612146"
sra<-get_sra(bp, opt_cols = c("Sample Name", "Ecotype")) %>%
rename(Submitter_Id = `Sample Name`) %>%
separate(Ecotype, into=c("Location", "Country"), extra="merge", sep=",") %>%
mutate(Location = str_remove_all(Location,fixed("\\")))
table(sra$Location)
table(sra$Country)
?separate
sp<-"Hippocampus_comes"
bp<-"PRJNA612146"
sra<-get_sra(bp, opt_cols = c("Sample Name", "Ecotype")) %>%
rename(Submitter_Id = `Sample Name`) %>%
separate(Ecotype, into=c("Location", "Country"), extra="merge", sep=",") %>%
mutate(Location = str_remove_all(Location,fixed("\\"))) %>%
mutate(State = separate(Country, sep=",", fill="left"))
sp<-"Hippocampus_comes"
bp<-"PRJNA612146"
sra<-get_sra(bp, opt_cols = c("Sample Name", "Ecotype")) %>%
rename(Submitter_Id = `Sample Name`) %>%
separate(Ecotype, into=c("Location", "Country"), extra="merge", sep=",") %>%
mutate(Location = str_remove_all(Location,fixed("\\"))) %>%
separate(Country, into=c("State", "Country"), sep=",", fill="left"))
sp<-"Hippocampus_comes"
bp<-"PRJNA612146"
sra<-get_sra(bp, opt_cols = c("Sample Name", "Ecotype")) %>%
rename(Submitter_Id = `Sample Name`) %>%
separate(Ecotype, into=c("Location", "Country"), extra="merge", sep=",") %>%
mutate(Location = str_remove_all(Location,fixed("\\"))) %>%
separate(Country, into=c("State", "Country"), sep=",", fill="left")))
sp<-"Hippocampus_comes"
bp<-"PRJNA612146"
sra<-get_sra(bp, opt_cols = c("Sample Name", "Ecotype")) %>%
rename(Submitter_Id = `Sample Name`) %>%
separate(Ecotype, into=c("Location", "Country"), extra="merge", sep=",") %>%
mutate(Location = str_remove_all(Location,fixed("\\"))) %>%
separate(Country, into=c("State", "Country"), sep=",", fill="left")
sra
sp<-"Hippocampus_comes"
bp<-"PRJNA612146"
sra<-get_sra(bp, opt_cols = c("Sample Name", "Ecotype")) %>%
rename(Submitter_Id = `Sample Name`) %>%
separate(Ecotype, into=c("Location", "Country"), extra="merge", sep=",") %>%
mutate(Location = str_remove_all(Location,fixed("\\"))) %>%
separate(Country, into=c("State", "Country"), sep=",", fill="left") %>%
mutate(Country = str_remove(Country, "^[[:space:]]"))
ra
sra
table(sra$Country)
sp<-"Hippocampus_comes"
bp<-"PRJNA612146"
sra<-get_sra(bp, opt_cols = c("Sample Name", "Ecotype")) %>%
rename(Submitter_Id = `Sample Name`) %>%
separate(Ecotype, into=c("Location", "Country"), extra="merge", sep=",") %>%
mutate(Location = str_remove_all(Location,fixed("\\"))) %>%
separate(Country, into=c("State", "Country"), sep=",", fill="left") %>%
mutate(Country = str_remove(Country, "^[[:space:]]")) %>%
mutate(State = case_when(
Country == "Fujian Province" | Country == "Hainan Province" ~ Country,
TRUE ~ State)) %>%
mutate(Country = case_when(
Country == "Fujian Province" | Country == "Hainan Province" ~ "China",
TRUE ~ Country))
table(sra$Country, sra$State, useNA="ifany")
sp<-"Hippocampus_comes"
bp<-"PRJNA612146"
sra<-get_sra(bp, opt_cols = c("Sample Name", "Ecotype")) %>%
rename(Submitter_Id = `Sample Name`) %>%
separate(Ecotype, into=c("Location", "Country"), extra="merge", sep=",") %>%
mutate(Location = str_remove_all(Location,fixed("\\"))) %>%
separate(Country, into=c("State", "Country"), sep=",", fill="left") %>%
mutate(Country = str_remove(Country, "^[[:space:]]")) %>%
mutate(State = str_remove_all(State,fixed("\\"))) %>%
mutate(State = case_when(
Country == "Fujian Province" | Country == "Hainan Province" ~ Country,
TRUE ~ State)) %>%
mutate(Country = case_when(
Country == "Fujian Province" | Country == "Hainan Province" ~ "China",
TRUE ~ Country))
table(sra$Organism)
sp<-"Hippocampus_comes"
bp<-"PRJNA612146"
sra<-get_sra(bp, opt_cols = c("Sample Name", "Ecotype")) %>%
rename(Submitter_Id = `Sample Name`) %>%
separate(Ecotype, into=c("Location", "Country"), extra="merge", sep=",") %>%
mutate(Location = str_remove_all(Location,fixed("\\"))) %>%
separate(Country, into=c("State", "Country"), sep=",", fill="left") %>%
mutate(Country = str_remove(Country, "^[[:space:]]")) %>%
mutate(State = str_remove_all(State,fixed("\\"))) %>%
mutate(State = case_when(
Country == "Fujian Province" | Country == "Hainan Province" ~ Country,
TRUE ~ State)) %>%
mutate(Country = case_when(
Country == "Fujian Province" | Country == "Hainan Province" ~ "China",
TRUE ~ Country))
#decided to filter species without 10 individuals, just for simplicity
sra %>% filter(Organism != "Hippocampus_casscsio", Organism != "Hippocampus_camelopardalis", Organism != "Hippocampus_capensis") %>% write_metadata(sp)
bp<-"PRJEB27858"
sp<-"Hypoplectrus_puella"
sra<-get_sra(bp, opt_cols=c("geo_loc_name_country", "geo_loc_name_country_continent", "lat_lon",
"Sample Name", "Collection_date", "geographic_location_(region_and_locality)"))
sra
bp<-"PRJEB27858"
sp<-"Hypoplectrus_puella"
sra<-get_sra(bp, opt_cols=c("geo_loc_name_country", "geo_loc_name_country_continent", "lat_lon",
"Sample Name", "Collection_date", "geographic_location_(region_and_locality)")) %>%
rename(Submitter_Id = `Sample Name`, Country = geo_loc_name_country,
Continent = geo_loc_name_country_continent, Location = geographic_location_(region_and_locality))
names(sra)
bp<-"PRJEB27858"
sp<-"Hypoplectrus_puella"
sra<-get_sra(bp, opt_cols=c("geo_loc_name_country", "geo_loc_name_country_continent", "lat_lon",
"Sample Name", "Collection_date", "geographic_location_(region_and_locality)")) %>%
rename(Submitter_Id = `Sample Name`, Country = geo_loc_name_country,
Continent = geo_loc_name_country_continent, Location = `geographic_location_(region_and_locality)`)
sra
table(sra$LibraryName)
bp<-"PRJEB27858"
sp<-"Hypoplectrus_puella"
sra<-get_sra(bp, opt_cols=c("geo_loc_name_country", "geo_loc_name_country_continent", "lat_lon",
"Alias", "Collection_date", "geographic_location_(region_and_locality)")) %>%
rename(Submitter_Id = Alias, Country = geo_loc_name_country,
Continent = geo_loc_name_country_continent, Location = `geographic_location_(region_and_locality)`) %>%
mutate(LibraryName = Submitter_Id)
sra
bp<-"PRJEB27858"
sp<-"Hypoplectrus_puella"
sra<-get_sra(bp, opt_cols=c("geo_loc_name_country", "geo_loc_name_country_continent", "lat_lon",
"Alias", "Collection_date", "geographic_location_(region_and_locality)")) %>%
rename(Submitter_Id = Alias, Country = geo_loc_name_country,
Continent = geo_loc_name_country_continent, Location = `geographic_location_(region_and_locality)`) %>%
mutate(LibraryName = Submitter_Id)
write_metadata(sra, sp)
library(rvest)
library(stringr)
library(tabulizer)
library(readxl)
library(tidyverse)
library(docxtractr)
library(tabulizer)
if (!require("remotes")) {
install.packages("remotes")
}
remotes::install_github(c("ropensci/tabulizerjars", "ropensci/tabulizer"))
remotes::install_github(c("ropensci/tabulizerjars", "ropensci/tabulizer"))
pwd()
getwd()
clean_metadata_path <- "cleaned-metadata/"
raw_metadata_path <- "SRA-sample-metadata/"
genome_key_file <- "Organism_Metadata.tsv"
genome_key <- read_tsv(file=genome_key_file)
get_sra <- function(sp, path=raw_metadata_path, opt_cols) {
default_cols = c("BioProject", "BioSample", "Run", "Library Name", "Organism", "sex")
if (missing(opt_cols)) {
cols = enquo(default_cols)
} else {
default_cols = c(default_cols, opt_cols)
cols = enquo(default_cols)
}
read_tsv(str_c(raw_metadata_path, "SRA_Metadata_", sp, ".tsv")) %>%
select(!!cols) %>% rename(LibraryName = `Library Name`)
}
write_metadata <- function(df, refSp) {
refGenome <- genome_key %>% filter(Organism == refSp) %>% pull(AssemblyAccession)
#Run metadata
df %>% mutate(refGenome = refGenome) %>%
select(BioSample, LibraryName, refGenome, Run, Organism, BioProject) %>% distinct() %>%
mutate(LibraryName = as.character(LibraryName)) %>%
mutate(LibraryName = case_when(
LibraryName == "unspecified" ~ str_c("library_", BioSample),
TRUE ~ LibraryName
)) %>%
split(., .$Organism) %>%
imap(~ write_csv(as.data.frame(.x), file = str_c(clean_metadata_path, .y, '_run_metadata.csv')))
#Sample metadata
df %>% mutate(refGenome = refGenome, refSpecies = refSp) %>%
select(-Run, -LibraryName) %>% distinct() %>%
split(., .$Organism) %>%
imap(~ write_csv(as.data.frame(.x), file = str_c(clean_metadata_path, .y, '_sample_metadata.csv')))
}
sp <- "Corvus_cornix_cornix"
bp <- "PRJNA192205"
sra<-get_sra(bp, opt_cols=c("Sample Name", "geo_loc_name_country", "geo_loc_name_country_continent", "geo_loc_name")) %>%
rename(Submitter_Id = `Sample Name`, Country = geo_loc_name_country, Continent = geo_loc_name_country_continent, Locality=geo_loc_name)
sra2<-get_sra(bp)
sra2
View(sra2)
sra2<-get_sra(bpo, pt_cols=c("Sample Name", "geo_loc_name_country", "geo_loc_name_country_continent", "geo_loc_name")) %>%
rename(Submitter_Id = `Sample Name`, Country = geo_loc_name_country, Continent = geo_loc_name_country_continent, Locality=geo_loc_name)
sra2<-get_sra(bp, opt_cols=c("Sample Name", "geo_loc_name_country", "geo_loc_name_country_continent", "geo_loc_name")) %>%
rename(Submitter_Id = `Sample Name`, Country = geo_loc_name_country, Continent = geo_loc_name_country_continent, Locality=geo_loc_name)
View(sra2)
sra2<-get_sra(bp2, opt_cols=c("Sample Name", "geo_loc_name_country", "geo_loc_name_country_continent", "geo_loc_name")) %>%
rename(Submitter_Id = `Sample Name`, Country = geo_loc_name_country, Continent = geo_loc_name_country_continent, Locality=geo_loc_name)
bp2 <- "PRJEB9057"
sra2<-get_sra(bp2, opt_cols=c("Sample Name", "geo_loc_name_country", "geo_loc_name_country_continent", "geo_loc_name")) %>%
rename(Submitter_Id = `Sample Name`, Country = geo_loc_name_country, Continent = geo_loc_name_country_continent, Locality=geo_loc_name)
bp2 <- "PRJEB9057"
sra2<-get_sra(bp2, opt_cols=c("Sample Name", "geo_loc_name_country", "geo_loc_name_country_continent", "geo_loc_name")) %>%
rename(Submitter_Id = `Sample Name`, Country = geo_loc_name_country, Continent = geo_loc_name_country_continent, Locality=geo_loc_name)
sp <- "Corvus_cornix_cornix"
bp <- "PRJNA192205"
sra<-get_sra(bp, opt_cols=c("Sample Name", "geo_loc_name_country", "geo_loc_name_country_continent", "geo_loc_name")) %>%
rename(Submitter_Id = `Sample Name`, Country = geo_loc_name_country, Continent = geo_loc_name_country_continent, Locality=geo_loc_name)
library(stringr)
library(rvest)
library(stringr)
library(tabulizer)
library(readxl)
library(docxtractr)
clean_metadata_path <- "cleaned-metadata/"
raw_metadata_path <- "SRA-sample-metadata/"
genome_key_file <- "Organism_Metadata.tsv"
genome_key <- read_tsv(file=genome_key_file)
library(tidyverse)
sra<-get_sra(bp, opt_cols=c("Sample Name", "geo_loc_name_country", "geo_loc_name_country_continent", "geo_loc_name")) %>%
rename(Submitter_Id = `Sample Name`, Country = geo_loc_name_country, Continent = geo_loc_name_country_continent, Locality=geo_loc_name)
get_sra <- function(sp, path=raw_metadata_path, opt_cols) {
default_cols = c("BioProject", "BioSample", "Run", "Library Name", "Organism", "sex")
if (missing(opt_cols)) {
cols = enquo(default_cols)
} else {
default_cols = c(default_cols, opt_cols)
cols = enquo(default_cols)
}
read_tsv(str_c(raw_metadata_path, "SRA_Metadata_", sp, ".tsv")) %>%
select(!!cols) %>% rename(LibraryName = `Library Name`)
}
write_metadata <- function(df, refSp) {
refGenome <- genome_key %>% filter(Organism == refSp) %>% pull(AssemblyAccession)
#Run metadata
df %>% mutate(refGenome = refGenome) %>%
select(BioSample, LibraryName, refGenome, Run, Organism, BioProject) %>% distinct() %>%
mutate(LibraryName = as.character(LibraryName)) %>%
mutate(LibraryName = case_when(
LibraryName == "unspecified" ~ str_c("library_", BioSample),
TRUE ~ LibraryName
)) %>%
split(., .$Organism) %>%
imap(~ write_csv(as.data.frame(.x), file = str_c(clean_metadata_path, .y, '_run_metadata.csv')))
#Sample metadata
df %>% mutate(refGenome = refGenome, refSpecies = refSp) %>%
select(-Run, -LibraryName) %>% distinct() %>%
split(., .$Organism) %>%
imap(~ write_csv(as.data.frame(.x), file = str_c(clean_metadata_path, .y, '_sample_metadata.csv')))
}
genome_key_file <- "Organism_Metadata.tsv"
genome_key <- read_tsv(file=genome_key_file)
sra<-get_sra(bp, opt_cols=c("Sample Name", "geo_loc_name_country", "geo_loc_name_country_continent", "geo_loc_name")) %>%
rename(Submitter_Id = `Sample Name`, Country = geo_loc_name_country, Continent = geo_loc_name_country_continent, Locality=geo_loc_name)
bp2 <- "PRJEB9057"
sra2<-get_sra(bp2, opt_cols=c("Sample Name", "geo_loc_name_country", "geo_loc_name_country_continent", "geo_loc_name")) %>%
rename(Submitter_Id = `Sample Name`, Country = geo_loc_name_country, Continent = geo_loc_name_country_continent, Locality=geo_loc_name)
bp2 <- "PRJEB9057"
sra2<-get_sra(bp2, opt_cols=c("Submitter_Id")) %>%
rename(Submitter_Id = `Sample Name`)
sra2<-get_sra(bp2, opt_cols=c("Submitter_Id"))
View(sra2)
sra2<-get_sra(bp2, opt_cols=c("Submitter_Id")) %>% mutate(Country = character(NA), Continent = character(NA), Locality = character(NA))
sra2<-get_sra(bp2, opt_cols=c("Submitter_Id")) %>% mutate(Country = NA, Continent = NA, Locality = NA)
sra1<-get_sra(bp, opt_cols=c("Sample Name", "geo_loc_name_country", "geo_loc_name_country_continent", "geo_loc_name")) %>%
rename(Submitter_Id = `Sample Name`, Country = geo_loc_name_country, Continent = geo_loc_name_country_continent, Locality=geo_loc_name)
sra<-rbind(sra1, sra2)
write_metadata(sra, sp)
