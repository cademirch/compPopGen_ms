new_qc <- left_join(rs, bskey) %>% add_lat_long()
new_qc
new_qc %>% View()
parzer::parse_llstr("14.83 S 60.42 W")
parzer::parse_llstr("14.83 S, 60.42 W")
new_qc <- left_join(rs, bskey) %>% mutate(lat_lon = str_trim(lat_lon)) %>% add_lat_long()
View(new_qc)
new_qc <- left_join(rs, bskey) %>% mutate(lat_lon = str_trim(lat_lon)) %>%
mutate(lat_lon_clean = str_replace_all(tbl$lat_lon, "[\r\n\"\'\ ́]", " ") %>%
str_trim() %>%
str_replace_all("(.)\\s+([:alpha:])", "\1 , \2"))
new_qc <- left_join(rs, bskey) %>% mutate(lat_lon = str_trim(lat_lon)) %>%
mutate(lat_lon_clean = str_trim(str_replace_all(lat_lon, "[\r\n\"\'\ ́]", " "))) %>%
str_trim() %>%
str_replace_all("(.)\\s+([:alpha:])", "\1 , \2"))
new_qc <- left_join(rs, bskey) %>% mutate(lat_lon = str_trim(lat_lon)) %>%
mutate(lat_lon_clean = str_trim(str_replace_all(lat_lon, "[\r\n\"\'\ ́]", " ")) %>%
str_trim() %>%
str_replace_all("(.)\\s+([:alpha:])", "\1 , \2"))
View(new_qc)
new_qc <- left_join(rs, bskey) %>% mutate(lat_lon = str_trim(lat_lon)) %>%
mutate(lat_lon_clean = str_trim(str_replace_all(lat_lon, "[\r\n\"\'\ ́]", " ")))
View(new_qc)
?str_trim
new_qc <- left_join(rs, bskey) %>% mutate(lat_lon = str_trim(lat_lon)) %>%
mutate(lat_lon_clean = str_squish(str_replace_all(lat_lon, "[\r\n\"\'\ ́]", " ")))
View(new_qc)
str_replace_all("14.83 S 60.42 W", (.)\\s+([:alpha:])", "\1 , \2"))
str_replace_all("14.83 S 60.42 W", "(.)\\s+([:alpha:])", "\1 , \2"))
str_replace_all("14.83 S 60.42 W", "(.)\\s+([:alpha:])", "\1 , \2")
str_replace_all("14.83 S 60.42 W", "(.*)\\s+([:alpha:])", "\1 , \2")
str_replace_all("14.83 S 60.42 W", "(\S)\\s+([:alpha:])", "\1 , \2")
str_replace_all("14.83 S 60.42 W", "([:digit:])\\s+([:alpha:])", "\1 , \2")
str_replace_all("14.83 S 60.42 W", "([:digit:])\\s+([NESW])", "\1 , \2")
str_replace_all("14.83 S 60.42 W", "([NSEW])\\s+([:digit:])", "\1 , \2")
new_qc <- left_join(rs, bskey) %>% mutate(lat_lon = str_trim(lat_lon)) %>%
mutate(lat_lon_clean = str_squish(str_replace_all(lat_lon, "[\r\n\"\'\ ́]", " "))) %>%
str_replace_all("14.83 S 60.42 W", "([NSEW])\\s+([:digit:])", "\1 , \2")
new_qc <- left_join(rs, bskey) %>% mutate(lat_lon = str_trim(lat_lon)) %>%
mutate(lat_lon_clean = str_squish(str_replace_all(lat_lon, "[\r\n\"\'\ ́]", " ")) %>%
str_replace_all("([NSEW])\\s+([:digit:])", "\1 , \2"))
View(new_qc)
new_qc <- left_join(rs, bskey) %>% mutate(lat_lon = str_trim(lat_lon)) %>%
mutate(lat_lon_clean = str_squish(str_replace_all(lat_lon, "[\r\n\"\'\ ́]", " ")) %>%
str_replace_all("([NSEW])\\s+([:digit:])", "\\1 , \\2"))
library(parzer)
new_qc <- left_join(rs, bskey) %>% mutate(lat_lon = str_trim(lat_lon)) %>%
mutate(lat_lon_clean = str_squish(str_replace_all(lat_lon, "[\r\n\"\'\ ́]", " ")) %>%
str_replace_all("([NSEW])\\s+([:digit:])", "\\1 , \\2")) %>%
mutate(lat = parse_llstr(lat_lon_clean)$lat,
long =  parse_llstr(lat_lon_clean)$lon)
View(new_qc)
new_qc <- left_join(rs, bskey) %>% mutate(lat_lon = str_trim(lat_lon)) %>%
mutate(lat_lon_clean = str_squish(str_replace_all(lat_lon, "[\r\n\"\'\ ́]", " ")) %>%
str_replace_all("([NSEW])\\s+([:digit:])", "\\1 , \\2")) %>%
mutate(lat = parse_llstr(lat_lon_clean)$lat,
long =  parse_llstr(lat_lon_clean)$lon) %>%
select(BioSample, refGenome, Organism, lat, long)
View(new_qc)
runs<-read_table("all_run_data.csv", col_names = c("BioSample", "refGenome", "Organism")) %>% mutate(run = TRUE)
runs<-read_table("all_run_data.csv", col_names = c("BioSample", "refGenome", "Organism")) %>% mutate(run = TRUE)
runs<-read_table("all_run_data.csv", col_names = T)
runs
runs<-read_csv("all_run_data.csv", col_names = T)
runs<-read_csv("all_run_data.csv", col_names = T) %>% distinct()
runs
lat_lon<-read_csv("lat_lon_input.csv", col_names = T)
lat_sep<-read_csv("Lat_Long_separate_input.csv", col_names=T)
lat_sep %>% filter(!is.na(lat_lon))
lat_se[]
lat_sep
lat_sep <- lat_sep %>% filter(!is.na(Latitude), !is.na(Longitude))
lat_sep <- lat_sep %>% filter(!is.na(Latitude), !is.na(Longitude)) %>%
mutate(lat = parse_lat(Latitude), long = parse_lon(Longitude))
lat_sep
View(lat_sep)
lat_sep <- lat_sep %>% filter(!is.na(Latitude), !is.na(Longitude)) %>%
mutate(lat = parse_lat(Latitude), long = parse_lon(Longitude)) %>%
select(BioSample, lat, long)
lat_lon <- lat_lon %>% filter(!is.na(lat_lon)) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon, "[\r\n\"\'\ ́]", " ") %>%
str_squash() %>%
str_replace_all("(.)\\s+([:alpha:])", "\\1 , \\2"))
lat_lon <- lat_lon %>% filter(!is.na(lat_lon)) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon, "[\r\n\"\'\ ́]", " ") %>%
str_trim() %>%
str_replace_all("(.)\\s+([:alpha:])", "\\1 , \\2"))
View(lat_lon)
lat_lon <- lat_lon %>% filter(!is.na(lat_lon)) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon, "[\r\n\"\'\ ́]", " ") %>%
str_trim() %>%
str_replace_all("([:digit:])\\s+([NSEW])", "\\1 , \\2"))
View(lat_lon)
lat_lon <- lat_lon %>% filter(!is.na(lat_lon)) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon, "[\r\n\"\'\ ́]", " ") %>%
str_trim() %>%
str_replace_all("([NSEW])\\s+([:digit:])", "\\1 , \\2"))
View(lat_lon)
lat_lon <- lat_lon %>% filter(!is.na(lat_lon)) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon, "[\r\n\"\'\ ́]", " ") %>%
str_trim() %>%
str_replace_all("([NSEW])\\s+([:digit:])", "\\1 , \\2")) %>%
mutate(lat = parse_llstr(lat_lon_clean)$lat,
long =  parse_llstr(lat_lon_clean)$lon)
warnings()
lat_lon <- lat_lon %>% filter(!is.na(lat_lon)) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon, "[\r\n]", " ") %>%
str_trim() %>%
str_replace_all("([NSEW])\\s+([:digit:])", "\\1 , \\2")) %>%
mutate(lat = parse_llstr(lat_lon_clean)$lat,
long =  parse_llstr(lat_lon_clean)$lon)
View(lat_lon)
warnings()
?str_match
str_match("N 23°16.624 ́ W 98° 56.315 ́",^ [NESW)]
str_match("N 23°16.624 ́ W 98° 56.315 ́",^ [NES])
str_match("N 23°16.624 ́ W 98° 56.315 ́", ^[NES])
str_starts("N 23°16.624", [NSEW])
str_starts("N 23°16.624", NSEW)
str_starts("N 23°16.624", "NSEW")
?str_starts
str_starts("N 23°16.624", "[NSEW]")
str_starts("23°16.624 N", "[NSEW]")
lat_lon <- lat_lon %>% filter(!is.na(lat_lon)) %>%
mutate(lat_lon_clean1 = str_replace_all(lat_lon, "[\r\n]", " ") %>%
str_trim()) %>%
mutate(lat_lon_clean = ifelse(str_starts(lat_lon_clean1, "[NSEW]"),
lat_lon_clean1,
str_replace_all("([NSEW])\\s+([:digit:])", "\\1 , \\2"))
) %>%
mutate(lat = parse_llstr(lat_lon_clean)$lat,
long =  parse_llstr(lat_lon_clean)$lon)
lat_lon <- lat_lon %>% filter(!is.na(lat_lon)) %>%
mutate(lat_lon_clean1 = str_replace_all(lat_lon, "[\r\n]", " ") %>%
str_trim()) %>%
mutate(lat_lon_clean = ifelse(str_starts(lat_lon_clean1, "[NSEW]"),
lat_lon_clean1,
str_replace_all(lat_lon_clean1, "([NSEW])\\s+([:digit:])", "\\1 , \\2"))
) %>%
mutate(lat = parse_llstr(lat_lon_clean)$lat,
long =  parse_llstr(lat_lon_clean)$lon)
warnings()
View(lat_lon)
l
lat_lon <- lat_lon %>% filter(!is.na(lat_lon)) %>%
mutate(lat_lon_clean1 = str_replace_all(lat_lon, "[\r\n]", " ") %>%
str_trim()) %>%
mutate(lat_lon_clean = ifelse(str_starts(lat_lon_clean1, "[NSEW]"),
str_replace_all(lat_lon_clean1, "(\\S)\\s+([NSEW])", "\\1 , \\2"),
str_replace_all(lat_lon_clean1, "([NSEW])\\s+([:digit:])", "\\1 , \\2"))
) %>%
mutate(lat = parse_llstr(lat_lon_clean)$lat,
long =  parse_llstr(lat_lon_clean)$lon)
View(lat_lon)
lat_lon <- lat_lon %>% filter(!is.na(lat_lon)) %>%
mutate(lat_lon_clean1 = str_replace_all(lat_lon, "[\r\n]", " ") %>%
str_trim()) %>%
mutate(lat_lon_clean = ifelse(str_starts(lat_lon_clean1, "[NSEW]"),
str_replace_all(lat_lon_clean1, "(\\S)\\s+([NSEW])", "\\1 , \\2"),
str_replace_all(lat_lon_clean1, "([NSEW])\\s+([:digit:])", "\\1 , \\2"))
) %>%
mutate(lat = parse_llstr(lat_lon_clean)$lat,
long =  parse_llstr(lat_lon_clean)$lon) %>%
select(BioSample, lat, long, lat_lon, lat_lon_clean)
View(lat_lon)
warnings()
lat_lon <- lat_lon %>% filter(!is.na(lat_lon)) %>%
mutate(lat_lon_clean1 = str_replace_all(lat_lon, "[\r\n]", " ") %>%
str_trim()) %>%
mutate(lat_lon_clean = ifelse(str_starts(lat_lon_clean1, "[NSEW]"),
str_replace_all(lat_lon_clean1, "(\\S)\\s+([NSEW])", "\\1 , \\2"),
str_replace_all(lat_lon_clean1, "([NSEW])\\s+([:digit:])", "\\1 , \\2"))
) %>%
#need to clean up one bioproject where minutes symbol was convered to 0
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "8016.77", "8'16.77")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "23027.52", "23'27.52")) %>%
mutate(lat = parse_llstr(lat_lon_clean)$lat,
long =  parse_llstr(lat_lon_clean)$lon) %>%
select(BioSample, lat, long, lat_lon, lat_lon_clean)
View(lat_lon)
lat_lon <- lat_lon %>% filter(!is.na(lat_lon)) %>%
mutate(lat_lon_clean1 = str_replace_all(lat_lon, "[\r\n]", " ") %>%
str_trim()) %>%
mutate(lat_lon_clean = ifelse(str_starts(lat_lon_clean1, "[NSEW]"),
str_replace_all(lat_lon_clean1, "(\\S)\\s+([NSEW])", "\\1 , \\2"),
str_replace_all(lat_lon_clean1, "([NSEW])\\s+([:digit:])", "\\1 , \\2"))
) %>%
#need to clean up one bioproject where minutes symbol was convered to 0
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "8016.77", "8'16.77")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "23027.52", "23'27.52")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "22025.59", "22'25.59")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "20047.10", "20'47.10")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "59027.60", "59'27.60")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "26045.60", "26'45.60")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "7051.77", "7'51.77")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "22018.18", "22'18.18")) %>%
mutate(lat = parse_llstr(lat_lon_clean)$lat,
long =  parse_llstr(lat_lon_clean)$lon) %>%
select(BioSample, lat, long, lat_lon, lat_lon_clean)
lat_lon <- lat_lon %>% filter(!is.na(lat_lon)) %>%
mutate(lat_lon_clean1 = str_replace_all(lat_lon, "[\r\n]", " ") %>%
str_trim()) %>%
mutate(lat_lon_clean = ifelse(str_starts(lat_lon_clean1, "[NSEW]"),
str_replace_all(lat_lon_clean1, "(\\S)\\s+([NSEW])", "\\1 , \\2"),
str_replace_all(lat_lon_clean1, "([NSEW])\\s+([:digit:])", "\\1 , \\2"))
) %>%
#need to clean up one bioproject where minutes symbol was convered to 0
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "8016.77", "8'16.77")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "23027.52", "23'27.52")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "22025.59", "22'25.59")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "20047.10", "20'47.10")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "59027.60", "59'27.60")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "26045.60", "26'45.60")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "7051.77", "7'51.77")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "22018.18", "22'18.18")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "36024.07", "36'24.07")) %>%
mutate(lat = parse_llstr(lat_lon_clean)$lat,
long =  parse_llstr(lat_lon_clean)$lon) %>%
select(BioSample, lat, long, lat_lon, lat_lon_clean)
View(lat_lon)
rs
new_qc <-  mutate(lat_lon = str_trim(lat_lon)) %>%
mutate(lat_lon_clean = str_squish(str_replace_all(lat_lon, "[\r\n\"\'\ ́]", " ")) %>%
str_replace_all("([NSEW])\\s+([:digit:])", "\\1 , \\2")) %>%
mutate(lat = parse_llstr(lat_lon_clean)$lat,
long =  parse_llstr(lat_lon_clean)$lon) %>%
select(BioSample, lat, long)
new_qc <-  mutate(lat_lon = str_trim(lat_lon)) %>%
mutate(lat_lon_clean = str_trim(str_replace_all(lat_lon, "[\r\n\"\'\ ́]", " ")) %>%
str_replace_all("([NSEW])\\s+([:digit:])", "\\1 , \\2")) %>%
mutate(lat = parse_llstr(lat_lon_clean)$lat,
long =  parse_llstr(lat_lon_clean)$lon) %>%
select(BioSample, lat, long)
new_qc <-  mutate(lat_lon = str_trim(lat_lon)) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon, "[\r\n\"\'\ ́]", " ") %>%
str_replace_all("([NSEW])\\s+([:digit:])", "\\1 , \\2")) %>%
mutate(lat = parse_llstr(lat_lon_clean)$lat,
long =  parse_llstr(lat_lon_clean)$lon) %>%
select(BioSample, lat, long)
new_qc <- rs %>% mutate(lat_lon = str_trim(lat_lon)) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon, "[\r\n\"\'\ ́]", " ") %>%
str_replace_all("([NSEW])\\s+([:digit:])", "\\1 , \\2")) %>%
mutate(lat = parse_llstr(lat_lon_clean)$lat,
long =  parse_llstr(lat_lon_clean)$lon) %>%
select(BioSample, lat, long)
View(new_qc)
lat_lon <- lat_lon %>% filter(!is.na(lat_lon)) %>%
mutate(lat_lon_clean1 = str_replace_all(lat_lon, "[\r\n]", " ") %>%
str_trim()) %>%
mutate(lat_lon_clean = ifelse(str_starts(lat_lon_clean1, "[NSEW]"),
str_replace_all(lat_lon_clean1, "(\\S)\\s+([NSEW])", "\\1 , \\2"),
str_replace_all(lat_lon_clean1, "([NSEW])\\s+([:digit:])", "\\1 , \\2"))
) %>%
#need to clean up one bioproject where minutes symbol was convered to 0
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "8016.77", "8'16.77")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "23027.52", "23'27.52")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "22025.59", "22'25.59")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "20047.10", "20'47.10")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "59027.60", "59'27.60")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "26045.60", "26'45.60")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "7051.77", "7'51.77")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "22018.18", "22'18.18")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "36024.07", "36'24.07")) %>%
mutate(lat = parse_llstr(lat_lon_clean)$lat,
long =  parse_llstr(lat_lon_clean)$lon) %>%
select(BioSample, lat, long, lat_lon_clean)
qc %>% filter(is.na(qc)) %>% select(BioSample) %>% write_tsv("need_qc_biosamples.txt")
rs <- read_tsv("runselector_cleaned.tsv", col_names = T)
new_qc <- rs %>% mutate(lat_lon = str_trim(lat_lon)) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon, "[\r\n\"\'\ ́]", " ") %>%
str_replace_all("([NSEW])\\s+([:digit:])", "\\1 , \\2")) %>%
mutate(lat = parse_llstr(lat_lon_clean)$lat,
long =  parse_llstr(lat_lon_clean)$lon) %>%
select(BioSample, lat, long, lat_lon_clean)
View(new_qc)
all_qc <- rbind(lat_sep,lat_lon,new_qc)
?bind_rows
all_qc <- bind_rows(lat_sep,lat_lon,new_qc)
all_qc
setwd("~/Projects/popgen/compPopGen_ms/qc-cleanup/")
runs<-read_csv("all_run_data.csv", col_names = T) %>% distinct()
lat_lon<-read_csv("lat_lon_input.csv", col_names = T)
lat_sep<-read_csv("Lat_Long_separate_input.csv", col_names=T)
#clean up lat_sep
lat_sep <- lat_sep %>% filter(!is.na(Latitude), !is.na(Longitude)) %>%
mutate(lat = parse_lat(Latitude), long = parse_lon(Longitude)) %>%
select(BioSample, lat, long)
#clean up lat lon
lat_lon <- lat_lon %>% filter(!is.na(lat_lon)) %>%
mutate(lat_lon_clean1 = str_replace_all(lat_lon, "[\r\n]", " ") %>%
str_trim()) %>%
mutate(lat_lon_clean = ifelse(str_starts(lat_lon_clean1, "[NSEW]"),
str_replace_all(lat_lon_clean1, "(\\S)\\s+([NSEW])", "\\1 , \\2"),
str_replace_all(lat_lon_clean1, "([NSEW])\\s+([:digit:])", "\\1 , \\2"))
) %>%
#need to clean up one bioproject where minutes symbol was convered to 0
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "8016.77", "8'16.77")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "23027.52", "23'27.52")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "22025.59", "22'25.59")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "20047.10", "20'47.10")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "59027.60", "59'27.60")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "26045.60", "26'45.60")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "7051.77", "7'51.77")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "22018.18", "22'18.18")) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon_clean, "36024.07", "36'24.07")) %>%
mutate(lat = parse_llstr(lat_lon_clean)$lat,
long =  parse_llstr(lat_lon_clean)$lon) %>%
select(BioSample, lat, long)
qc %>% filter(is.na(qc)) %>% select(BioSample) %>% write_tsv("need_qc_biosamples.txt")
rs <- read_tsv("runselector_cleaned.tsv", col_names = T)
new_qc <- rs %>% mutate(lat_lon = str_trim(lat_lon)) %>%
mutate(lat_lon_clean = str_replace_all(lat_lon, "[\r\n\"\'\ ́]", " ") %>%
str_replace_all("([NSEW])\\s+([:digit:])", "\\1 , \\2")) %>%
mutate(lat = parse_llstr(lat_lon_clean)$lat,
long =  parse_llstr(lat_lon_clean)$lon) %>%
select(BioSample, lat, long)
all_qc <- bind_rows(lat_sep,lat_lon,new_qc)
all_qc
all_runs <- left_join(runs, all_qc)
all_runs
table(all_runs$Organism)
table(all_runs$refGenome)
runs %>% filter(refGenome == "GCA_900092035.1")
all_runs <- left_join(runs, all_qc) %>% filter(refGenome != "GCA_900092035.1")
table(all_runs$refGenome)
all_runs
table(is.na(all_runs$lat))
1721/3517
1721/(1721+3517)
write_csv(all_runs, "final_QC_metadata.csv")
all_runs
distinct(all_runs$BioSample)
all_runs %>% select(BioSample) %>% distinct()
all_runs %>% distinct()
all_runs %>% select(BioSample,refGenome) %>% distinct()
all_runs %>% distinct(BioSample,refGenome,.keep_all=TRUE)
all_runs %>% select(BioSample,refGenome) %>% duplicated()
all_runs[all_runs %>% select(BioSample,refGenome) %>% duplicated()]
all_runs[all_runs %>% select(BioSample,refGenome) %>% duplicated(),]
all_runs[all_runs %>% select(BioSample,refGenome) %>% duplicated(),] %>% View()
all_runs[all_runs %>% select(BioSample) %>% duplicated(),] %>% View()
all_runs %>% distinct(BioSample,refGenome,.keep_all=TRUE) %>% write_csv("final_QC_metadata.csv")
ss <- read_csv("all_sumstats_merged.csv", col_names=T)
ss
?read_csv
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE)
ss
final_samples <- full_join(final_samples,ss)
final_samples <- all_runs %>% distinct(BioSample,refGenome,.keep_all=TRUE)
final_samples <- all_runs %>% distinct(BioSample,refGenome,.keep_all=TRUE) %>% full_join(ss)
?full_join
final_samples <- all_runs %>% distinct(BioSample,refGenome,.keep_all=TRUE) %>% full_join(ss, by=c("BioSample" = "Sample"))
View(final_samples)
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE)
ss
View(ss)
all_runs
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(genome = str_remove_all("sumstats//") %>% str_remove_all("_bam_sumstats\.txt"))
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(genome = str_remove_all("sumstats//") %>% str_remove_all("_bam_sumstats.txt"))
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(genome = str_remove_all("sumstats//") %>% str_remove_all("_bam_sumstats.txt"))
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(genome = str_remove_all(file, "sumstats//") %>% str_remove_all("_bam_sumstats.txt"))
?str_remove_all
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(genome = str_remove_all(File, "sumstats//") %>% str_remove_all("_bam_sumstats.txt"))
View(ss)
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(genome = str_remove_all(File, "sumstats//") %>% str_remove_all("_bam_sumstats.txt"))
View(ss)
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(genome = str_remove_all(File, "sumstats//") %>% str_remove_all("_bam_sumstats.txt"))
View(ss)
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(genome = str_remove_all(File, "sumstats\/") %>% str_remove_all("_bam_sumstats.txt"))
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(genome = str_remove_all(File, "sumstats///") %>% str_remove_all("_bam_sumstats.txt"))
View(ss)
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(genome = str_remove_all(File, fixed("sumstats/")) %>% str_remove_all("_bam_sumstats.txt"))
View(ss)
?split
?separate
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(genome = str_remove_all(File, fixed("sumstats/")) %>% str_remove_all("_bam_sumstats.txt"))
View(ss)
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(source = str_remove_all(File, fixed("sumstats/")) %>% str_remove_all("_bam_sumstats.txt")) %>%
mutate(Organism = str_remove_all(Source, "GC[AF]_[0-9].[0-9]"))
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(source = str_remove_all(File, fixed("sumstats/")) %>% str_remove_all("_bam_sumstats.txt")) %>%
mutate(Organism = str_remove_all(source, "GC[AF]_[0-9].[0-9]"))
View(ss)
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(source = str_remove_all(File, fixed("sumstats/")) %>% str_remove_all("_bam_sumstats.txt")) %>%
mutate(Organism = str_remove_all(source, "GC[AF]_[0-9]+\.[0-9]"))
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(source = str_remove_all(File, fixed("sumstats/")) %>% str_remove_all("_bam_sumstats.txt")) %>%
mutate(Organism = str_remove_all(source, "GC[AF]_[0-9]+\\.[0-9]"))
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(source = str_remove_all(File, fixed("sumstats/")) %>% str_remove_all("_bam_sumstats.txt")) %>%
mutate(Organism = str_remove_all(source, "_GC[AF]_[0-9]+\\.[0-9]"))
table(ss$Organism)
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(source = str_remove_all(File, fixed("sumstats/")) %>% str_remove_all("_bam_sumstats.txt")) %>%
mutate(Organism = str_remove_all(source, "_GC[AF]_[0-9]+\\.[0-9]")) %>%
mutate(refGenome = str_remove_all(source, "[A-Za-z]+_[A-Za-z]+_")) %>%
select(-file, -source)
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(source = str_remove_all(File, fixed("sumstats/")) %>% str_remove_all("_bam_sumstats.txt")) %>%
mutate(Organism = str_remove_all(source, "_GC[AF]_[0-9]+\\.[0-9]")) %>%
mutate(refGenome = str_remove_all(source, "[A-Za-z]+_[A-Za-z]+_")) %>%
select(-File, -source)
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(source = str_remove_all(File, fixed("sumstats/")) %>% str_remove_all("_bam_sumstats.txt")) %>%
mutate(Organism = str_remove_all(source, "_GC[AF]_[0-9]+\\.[0-9]")) %>%
mutate(refGenome = str_remove_all(source, "[A-Za-z]+_[A-Za-z]+_")) %>%
select(-File, -source) %>%
mutate(refGenome = ifelse(refGenome == Organism, NA, refGenome))
genome_key <- all_runs %>% distinct(refGenome, Organism)
genome_key
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(source = str_remove_all(File, fixed("sumstats/")) %>% str_remove_all("_bam_sumstats.txt")) %>%
mutate(Organism = str_remove_all(source, "_GC[AF]_[0-9]+\\.[0-9]")) %>%
mutate(refGenome = str_remove_all(source, "[A-Za-z]+_[A-Za-z]+_")) %>%
select(-File, -source) %>%
mutate(refGenome = ifelse(refGenome == Organism, NA, refGenome)) %>% left_join(genome_key, by=c("Organism" = "Organism"))
View(ss)
ss %>% filter(refGenome.x != refGenome.y) %>% View()
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(source = str_remove_all(File, fixed("sumstats/")) %>% str_remove_all("_bam_sumstats.txt")) %>%
mutate(Organism = str_remove_all(source, "_GC[AF]_[0-9]+\\.[0-9]")) %>%
select(-File, -source) %>% left_join(genome_key, by=c("Organism" = "Organism"))
View(ss)
final_samples <- all_runs %>% distinct(BioSample,refGenome,.keep_all=TRUE) %>% full_join(ss, by=c("BioSample" = "Sample", "refGenome" = "refGenome"))
View(final_samples)
final_samples <- all_runs %>% distinct(BioSample,refGenome,.keep_all=TRUE) %>% full_join(ss, by=c("BioSample" = "Sample", "refGenome" = "refGenome", "Organism" = "Organism"))
View(final_samples)
final_samples %>% filter(is.na(Total_Reads))
final_samples %>% filter(is.na(Total_Reads)) %>% View()
ss <- read_csv("all_sumstats_merged.csv", col_names=T, trim_ws = TRUE) %>%
mutate(source = str_remove_all(File, fixed("sumstats/")) %>% str_remove_all("_bam_sumstats.txt")) %>%
mutate(Organism = str_remove_all(source, "_GC[AF]_[0-9]+\\.[0-9]")) %>%
select(-File, -source) %>% left_join(genome_key, by=c("Organism" = "Organism"))
final_samples <- all_runs %>% distinct(BioSample,refGenome,.keep_all=TRUE) %>% full_join(ss, by=c("BioSample" = "Sample", "refGenome" = "refGenome", "Organism" = "Organism"))
final_samples %>% filter(is.na(Total_Reads)) %>% View()
final_samples
?split
# Split the tibble by the refGenome column
split_tibbles <- split(final_samples, final_samples$refGenome)
# Write each split tibble to a separate output file
for (split_value in names(split_tibbles)) {
tibble <- split_tibbles[[split_value]]
# Use the paste0 function to construct the output filename
filename <- paste0(split_value, "/summary_stats/final_bam_sumstats.txt")
# Use the write_tsv function from the write_tsv function from the readr package to write the tibble to a TSV file
write_tsv(tibble, filename)
}
?dir.create
# Split the tibble by the refGenome column
split_tibbles <- split(final_samples, final_samples$refGenome)
# Write each split tibble to a separate output file
for (split_value in names(split_tibbles)) {
tibble <- split_tibbles[[split_value]]
# Use the paste0 function to construct the output filename
filename <- paste0(split_value, "/summary_stats/final_bam_sumstats.txt")
dir <- dirname(filename)
if (!dir.exists(dir)) {
dir.create(dir,recursive = TRUE)
}
# Use the write_tsv function from the write_tsv function from the readr package to write the tibble to a TSV file
system()
write_tsv(tibble, filename)
}
# output separate sum stats files for each genome
# Split the tibble by the refGenome column
split_tibbles <- split(final_samples, final_samples$refGenome)
# Write each split tibble to a separate output file
for (split_value in names(split_tibbles)) {
tibble <- split_tibbles[[split_value]]
# Use the paste0 function to construct the output filename
filename <- paste0(split_value, "/summary_stats/final_bam_sumstats.txt")
dir <- dirname(filename)
if (!dir.exists(dir)) {
dir.create(dir,recursive = TRUE)
}
# Use the write_tsv function from the write_tsv function from the readr package to write the tibble to a TSV file
write_tsv(tibble, filename)
}
sumstats <- final_samples %>% rename(BioSample = Sample) %>% select(-Organism)
sumstats <- final_samples %>% rename(Sample = BioSample) %>% select(-Organism)
View(sumstats)
sumstats <- final_samples %>% rename(Sample = BioSample) %>% select(-Organism) %>% select(-lat) %>% select(-long)
View(sumstats)
sumstats <- final_samples %>% rename(Sample = BioSample) %>% select(-Organism) %>% select(-lat) %>% select(-long)
# output separate sum stats files for each genome
# Split the tibble by the refGenome column
split_tibbles <- split(sumstats, sumstats$refGenome)
# Write each split tibble to a separate output file
for (split_value in names(split_tibbles)) {
tibble <- split_tibbles[[split_value]] %>% select(-refGenome)
# Use the paste0 function to construct the output filename
filename <- paste0(split_value, "/summary_stats/final_bam_sumstats.txt")
dir <- dirname(filename)
if (!dir.exists(dir)) {
dir.create(dir,recursive = TRUE)
}
# Use the write_tsv function from the write_tsv function from the readr package to write the tibble to a TSV file
write_tsv(tibble, filename)
}
